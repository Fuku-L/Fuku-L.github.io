

<!DOCTYPE html>
<html lang="zh-CN" data-default-color-scheme=&#34;auto&#34;>



<head>
  <meta charset="UTF-8">
  <link rel="apple-touch-icon" sizes="76x76" href="/img/fishes.png">
  <link rel="icon" href="/img/fishes.png">
  <meta name="viewport"
        content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, shrink-to-fit=no">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  
  <meta name="theme-color" content="#2f4154">
  <meta name="description" content="">
  <meta name="author" content="Fuku Lee">
  <meta name="keywords" content="">
  
  <title>leetcode算法学习-数组和字符串 - Fuku</title>

  <link  rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css" />


  <link  rel="stylesheet" href="https://cdn.jsdelivr.net/npm/github-markdown-css@4.0.0/github-markdown.min.css" />
  <link  rel="stylesheet" href="/lib/hint/hint.min.css" />

  
    
    
      
      <link  rel="stylesheet" href="https://cdn.jsdelivr.net/npm/highlight.js@10.4.0/styles/github-gist.min.css" />
    
  

  
    <link  rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@3.5.7/dist/jquery.fancybox.min.css" />
  



<!-- 主题依赖的图标库，不要自行修改 -->

<link rel="stylesheet" href="//at.alicdn.com/t/font_1749284_ba1fz6golrf.css">



<link rel="stylesheet" href="//at.alicdn.com/t/font_1736178_kmeydafke9r.css">


<link  rel="stylesheet" href="/css/main.css" />

<!-- 自定义样式保持在最底部 -->

  
<link rel="stylesheet" href="/css/diy/shubiao.css">



  <script id="fluid-configs">
    var Fluid = window.Fluid || {};
    var CONFIG = {"hostname":"example.com","root":"/","version":"1.8.10","typing":{"enable":true,"typeSpeed":70,"cursorChar":"_","loop":true},"anchorjs":{"enable":true,"element":"h1,h2,h3,h4,h5,h6","placement":"right","visible":"hover","icon":""},"progressbar":{"enable":true,"height_px":3,"color":"#29d","options":{"showSpinner":false,"trickleSpeed":100}},"copy_btn":true,"image_zoom":{"enable":true,"img_url_replace":["",""]},"toc":{"enable":true,"headingSelector":"h1,h2,h3,h4,h5,h6","collapseDepth":0},"lazyload":{"enable":true,"loading_img":"/img/loading.gif","onlypost":false,"offset_factor":2},"web_analytics":{"enable":false,"baidu":null,"google":null,"gtag":null,"tencent":{"sid":null,"cid":null},"woyaola":null,"cnzz":null,"leancloud":{"app_id":null,"app_key":null,"server_url":null}}};
  </script>
  <script  src="/js/utils.js" ></script>
  <script  src="/js/color-schema.js" ></script>
<meta name="generator" content="Hexo 5.4.0"></head>


<body>
  <header style="height: 70vh;">
    <nav id="navbar" class="navbar fixed-top  navbar-expand-lg navbar-dark scrolling-navbar">
  <div class="container">
    <a class="navbar-brand"
       href="/">&nbsp;<strong>F's Log</strong>&nbsp;</a>

    <button id="navbar-toggler-btn" class="navbar-toggler" type="button" data-toggle="collapse"
            data-target="#navbarSupportedContent"
            aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
      <div class="animated-icon"><span></span><span></span><span></span></div>
    </button>

    <!-- Collapsible content -->
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
      <ul class="navbar-nav ml-auto text-center">
        
          
          
          
          
            <li class="nav-item">
              <a class="nav-link" href="/">
                <i class="iconfont icon-home-fill"></i>
                首页
              </a>
            </li>
          
        
          
          
          
          
            <li class="nav-item">
              <a class="nav-link" href="/archives/">
                <i class="iconfont icon-archive-fill"></i>
                归档
              </a>
            </li>
          
        
          
          
          
          
            <li class="nav-item">
              <a class="nav-link" href="/categories/">
                <i class="iconfont icon-category-fill"></i>
                分类
              </a>
            </li>
          
        
          
          
          
          
            <li class="nav-item">
              <a class="nav-link" href="/tags/">
                <i class="iconfont icon-tags-fill"></i>
                标签
              </a>
            </li>
          
        
          
          
          
          
            <li class="nav-item">
              <a class="nav-link" href="/about/">
                <i class="iconfont icon-user-fill"></i>
                关于
              </a>
            </li>
          
        
        
          <li class="nav-item" id="search-btn">
            <a class="nav-link" target="_self" data-toggle="modal" data-target="#modalSearch">&nbsp;<i
                class="iconfont icon-search"></i>&nbsp;</a>
          </li>
        
        
          <li class="nav-item" id="color-toggle-btn">
            <a class="nav-link" target="_self">&nbsp;<i
                class="iconfont icon-dark" id="color-toggle-icon"></i>&nbsp;</a>
          </li>
        
      </ul>
    </div>
  </div>
</nav>

    <div class="banner" id="banner" parallax=true
         style="background: url('https://gitee.com/fuku-lee/blog-pic-store/raw/master/img/20210427005926.jpg') no-repeat center center;
           background-size: cover;">
      <div class="full-bg-img">
        <div class="mask flex-center" style="background-color: rgba(0, 0, 0, 0.3)">
          <div class="page-header text-center fade-in-up">
            <span class="h2" id="subtitle" title="leetcode算法学习-数组和字符串">
              
            </span>

            
              <div class="mt-3">
  
  
    <span class="post-meta">
      <i class="iconfont icon-date-fill" aria-hidden="true"></i>
      <time datetime="2021-05-11 23:50" pubdate>
        2021年5月11日 晚上
      </time>
    </span>
  
</div>

<div class="mt-1">
  
    
    <span class="post-meta mr-2">
      <i class="iconfont icon-chart"></i>
      1.4k 字
    </span>
  

  
    
    <span class="post-meta mr-2">
      <i class="iconfont icon-clock-fill"></i>
      
      
      18
       分钟
    </span>
  

  
  
</div>

            
          </div>

          
        </div>
      </div>
    </div>
  </header>

  <main>
    
      

<div class="container-fluid nopadding-x">
  <div class="row nomargin-x">
    <div class="d-none d-lg-block col-lg-2"></div>
    <div class="col-lg-8 nopadding-x-md">
      <div class="container nopadding-x-md" id="board-ctn">
        <div class="py-5" id="board">
          <article class="post-content mx-auto">
            <!-- SEO header -->
            <h1 style="display: none">leetcode算法学习-数组和字符串</h1>
            
            <div class="markdown-body">
              <h1 id="数组的简介"><a href="#数组的简介" class="headerlink" title="数组的简介"></a>数组的简介</h1><h2 id="集合，列表，数组"><a href="#集合，列表，数组" class="headerlink" title="集合，列表，数组"></a>集合，列表，数组</h2><ol>
<li>集合：由一个或多个确定的元素所构成的整体。<blockquote>
<p>特点</p>
</blockquote>
<ol>
<li>元素类型不一定相同</li>
<li>没有顺序</li>
</ol>
</li>
</ol>
<ol start="2">
<li><p>列表：是一种数据项构成的有限序列，即按照一定的线性顺序，排列而成的数据项的集合。</p>
<blockquote>
<p>特点</p>
<ol>
<li>有序</li>
<li>长度可变 </li>
<li>类型不一定相同 </li>
</ol>
</blockquote>
</li>
</ol>
<p>  常见形式：数组和链表</p>
<ol start="3">
<li>数组：数组是列表的实现方式之一，也是面试中经常涉及到的数据结构。</li>
</ol>
<blockquote>
<p>特点<br>    1. 具备列表特性，具有自己的特点。<br>    2. 在c++和JAVA中不可变，元素类型一致。<br>    3. python中为list，长度可变，类型可以不一致。</p>
</blockquote>
<ol start="4">
<li>列表和数组的区别<ol>
<li>是否存在索引，内存空间是否连续。</li>
</ol>
</li>
</ol>
<h2 id="数组的4种操作"><a href="#数组的4种操作" class="headerlink" title="数组的4种操作"></a>数组的4种操作</h2><h3 id="读取元素"><a href="#读取元素" class="headerlink" title="读取元素"></a>读取元素</h3><p>通过索引的方式来读取数组中的元素。</p>
<ol>
<li>索引一般从 0 开始，只保存了索引为 <code>0</code> 处的内存地址。</li>
<li>计算内存地址这个过程是很快的，而我们一旦知道了内存地址就可以立即访问到该元素，因此它的时间复杂度是常数级别，为 O(1)。</li>
</ol>
<h3 id="查找元素"><a href="#查找元素" class="headerlink" title="查找元素"></a>查找元素</h3><p>在查找元素时，需从数组开头逐步向后查找。</p>
<ol>
<li>如果数组中的某个元素为目标元素，则停止查找；否则继续搜索直到到达数组的末尾。</li>
<li>查找元素的时间复杂度为 O(N)</li>
</ol>
<h3 id="插入元素"><a href="#插入元素" class="headerlink" title="插入元素"></a>插入元素</h3><p>插入元素时，有三种情况：</p>
<ol>
<li>在末尾直接添加元素，数组长度+1，且不需要挪动元素</li>
<li>在中间添加元素，数组长度+1，挪动 N到末尾的元素</li>
<li>在最开头添加元素，挪动N个元素。最坏情况</li>
</ol>
<h3 id="删除元素"><a href="#删除元素" class="headerlink" title="删除元素"></a>删除元素</h3><p>删除元素的时候也有三种情况：</p>
<ol>
<li>在末尾直接删除</li>
<li>在中间删除</li>
<li>删除第一个元素（索引值为 0 的元素）</li>
</ol>
<h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><h3 id="寻找数组的中心索引"><a href="#寻找数组的中心索引" class="headerlink" title="寻找数组的中心索引"></a>寻找数组的中心索引</h3><h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p><img src="https://gitee.com/fuku-lee/blog-pic-store/raw/master/img/20210512010701.png" srcset="/img/loading.gif" lazyload alt="image-20210512010659914"></p>
<p><strong>示例 1</strong></p>
<figure class="highlight tap"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs tap">输入：nums = [1, 7, 3, 6, 5, 6]<br>输出：3<br>解释：<br>中心下标是<span class="hljs-number"> 3 </span>。<br>左侧数之和 (1 +<span class="hljs-number"> 7 </span>+<span class="hljs-number"> 3 </span>= 11)，<br>右侧数之和 (5 +<span class="hljs-number"> 6 </span>= 11) ，二者相等。<br></code></pre></div></td></tr></table></figure>

<p><strong>示例 2</strong></p>
<figure class="highlight fix"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs fix"><span class="hljs-attr">输入：nums </span>=<span class="hljs-string"> [1, 2, 3]</span><br><span class="hljs-string">输出：-1</span><br><span class="hljs-string">解释：</span><br><span class="hljs-string">数组中不存在满足此条件的中心下标。</span><br></code></pre></div></td></tr></table></figure>

<p><strong>示例 3</strong></p>
<figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk">输入：nums = [<span class="hljs-number">2</span>, <span class="hljs-number">1</span>, -<span class="hljs-number">1</span>]<br>输出：<span class="hljs-number">0</span><br>解释：<br>中心下标是 <span class="hljs-number">0</span> 。<br>下标 <span class="hljs-number">0</span> 左侧不存在元素，视作和为 <span class="hljs-number">0</span> ；<br>右侧数之和为 <span class="hljs-number">1</span> + (-<span class="hljs-number">1</span>) = <span class="hljs-number">0</span> ，二者相等。<br><br>作者：力扣 (LeetCode)<br>链接：https:<span class="hljs-regexp">//</span>leetcode-cn.com<span class="hljs-regexp">/leetbook/</span>read<span class="hljs-regexp">/array-and-string/y</span>f47s/<br>来源：力扣（LeetCode）<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。<br></code></pre></div></td></tr></table></figure>

<h4 id="解题代码"><a href="#解题代码" class="headerlink" title="解题代码"></a>解题代码</h4><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">pivotIndex</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] nums)</span> </span>&#123;<br>        <span class="hljs-keyword">if</span>(nums== <span class="hljs-keyword">null</span>)&#123;<br>            <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>;<br>        &#125;<br><br>        <span class="hljs-keyword">int</span> leftSum=<span class="hljs-number">0</span>,rightSum = <span class="hljs-number">0</span>;<br><br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i&lt;nums.length; i++)&#123;<br>            rightSum += nums[i];<br>        &#125;<br><br>        <span class="hljs-keyword">if</span>(rightSum == leftSum)&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>        &#125;<br><br>        <span class="hljs-comment">// 注意：从 1 开始计算right的值</span><br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i&lt;nums.length; i++)&#123;<br>            rightSum -= nums[i];<br>            leftSum += nums[i-<span class="hljs-number">1</span>];<br>            <span class="hljs-keyword">if</span>(rightSum == leftSum)&#123;<br>                <span class="hljs-keyword">return</span> i;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>;<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure>

<p><img src="https://gitee.com/fuku-lee/blog-pic-store/raw/master/img/20210512010643.png" srcset="/img/loading.gif" lazyload alt="image-20210512010642715"></p>
<h3 id="寻找插入位置"><a href="#寻找插入位置" class="headerlink" title="寻找插入位置"></a>寻找插入位置</h3><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">searchInsert</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] nums, <span class="hljs-keyword">int</span> target)</span> </span>&#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i&lt;nums.length; i++)&#123;<br>            <span class="hljs-keyword">if</span>(target &lt;= nums[i]) <span class="hljs-keyword">return</span> i;<br>        &#125;<br>        <span class="hljs-keyword">return</span> nums.length;<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure>

<p><img src="https://gitee.com/fuku-lee/blog-pic-store/raw/master/img/20210512010621.png" srcset="/img/loading.gif" lazyload alt="image-20210512010619895"></p>
<h3 id="合并区间"><a href="#合并区间" class="headerlink" title="合并区间"></a>合并区间</h3><h4 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h4><h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><p><code>[[a1, a2],[b1, b2]]</code></p>
<p>普通的两个区间之间的关系有以下六种情况：</p>
<p><img src="https://gitee.com/fuku-lee/blog-pic-store/raw/master/img/20210512223408.png" srcset="/img/loading.gif" lazyload alt="image-20210512223406528"></p>
<p>所以第一步要对起始位置进行排序，排完序的相邻两个区间分成三种情况：互斥，相交，包含。其中，只有互斥的情况不需要合并。</p>
<p><img src="https://gitee.com/fuku-lee/blog-pic-store/raw/master/img/20210512223622.png" srcset="/img/loading.gif" lazyload alt="image-20210512223621286"></p>
<p>分析得到判断条件为：</p>
<p>互斥：<code> a2 &gt; b1</code></p>
<p>相交或者包含： a2 &lt;= b1, 取 a2 和 b2 中大的那一个作为区间的右边。</p>
<h4 id="解题代码-1"><a href="#解题代码-1" class="headerlink" title="解题代码"></a>解题代码</h4><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span>[][] merge(<span class="hljs-keyword">int</span>[][] intervals) &#123;<br>        <span class="hljs-comment">// 边界判断</span><br>        <span class="hljs-keyword">if</span> (intervals.length == <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> intervals;<br>        <span class="hljs-comment">// //按每行的第0列升序排序</span><br>        Arrays.sort(intervals, Comparator.comparingInt(a -&gt; a[<span class="hljs-number">0</span>]));<br>        <span class="hljs-comment">// 不知道合并后的二维数组的长度，所以用List类实现动态数组。</span><br>        List&lt;<span class="hljs-keyword">int</span>[]&gt; integerVector = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();<br>        <span class="hljs-keyword">int</span>[] ints = intervals[<span class="hljs-number">0</span>];<span class="hljs-comment">//定义一个Int类型数组用于作比较，默认值为第一组二维数组的值。</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt; intervals.length; i++) &#123;<span class="hljs-comment">//循环这个二维数组</span><br>            <span class="hljs-keyword">if</span> (ints[<span class="hljs-number">1</span>] &gt;= intervals[i][<span class="hljs-number">0</span>]) &#123;<span class="hljs-comment">//如果第一个数组的右端点大于等于下一个数组的左端点，做说明两个数组有所交集。</span><br>                ints[<span class="hljs-number">1</span>] = Math.max(ints[<span class="hljs-number">1</span>], intervals[i][<span class="hljs-number">1</span>]);<span class="hljs-comment">//int类型数组的右端点等于两个数组中右端点大的那个值。</span><br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                integerVector.add(ints);<span class="hljs-comment">//把int类型一维数组ints添加到我们创建的List类里面。</span><br>                ints = intervals[i];<span class="hljs-comment">//给一维数组重新赋值。</span><br>            &#125;<br>        &#125;<br>        integerVector.add(ints);<span class="hljs-comment">//把最后一个区间添加到List里面</span><br>        <span class="hljs-keyword">return</span> integerVector.toArray(<span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[integerVector.size()][<span class="hljs-number">2</span>]);<span class="hljs-comment">//把List转换成二维数组返回。</span><br><br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure>

<h1 id="二维数组简介"><a href="#二维数组简介" class="headerlink" title="二维数组简介"></a>二维数组简介</h1><h2 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h2><p>二位数组：数组中的每个元素都一个数组。（即一维数组套娃数组）</p>
<p><img src="https://gitee.com/fuku-lee/blog-pic-store/raw/master/img/20210813005311.png" srcset="/img/loading.gif" lazyload alt="image-20210813005309766"></p>
<p>本质上，二维数组还是一个一维数组。索引从0开始。可以看成一个<strong>矩阵</strong>，用来处理矩阵相关问题。</p>
<h3 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h3><p>二维数组 A=[[1,2,3,4],[2,4,5,6],[1,4,6,7]] 在内存中仍然是连续存储的，开始索引为 <code>A[0][0]</code>的内存地址。</p>
<p><img src="https://gitee.com/fuku-lee/blog-pic-store/raw/master/img/20210813005248.png" srcset="/img/loading.gif" lazyload alt="image-20210813005238956"></p>
<h2 id="练习-1"><a href="#练习-1" class="headerlink" title="练习"></a>练习</h2><h3 id="旋转矩阵"><a href="#旋转矩阵" class="headerlink" title="旋转矩阵"></a>旋转矩阵</h3><h4 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h4><p><img src="C:\Users\admin\AppData\Roaming\Typora\typora-user-images\image-20210813005523644.png" srcset="/img/loading.gif" lazyload alt="image-20210813005523644"></p>
<p><strong>示例 1</strong></p>
<figure class="highlight inform7"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs inform7">给定 matrix = <br><span class="hljs-comment">[</span><br><span class="hljs-comment">  <span class="hljs-comment">[1,2,3]</span>,</span><br><span class="hljs-comment">  <span class="hljs-comment">[4,5,6]</span>,</span><br><span class="hljs-comment">  <span class="hljs-comment">[7,8,9]</span></span><br><span class="hljs-comment">]</span>,<br><br>原地旋转输入矩阵，使其变为:<br><span class="hljs-comment">[</span><br><span class="hljs-comment">  <span class="hljs-comment">[7,4,1]</span>,</span><br><span class="hljs-comment">  <span class="hljs-comment">[8,5,2]</span>,</span><br><span class="hljs-comment">  <span class="hljs-comment">[9,6,3]</span></span><br><span class="hljs-comment">]</span><br></code></pre></div></td></tr></table></figure>

<p><strong>示例 2</strong></p>
<figure class="highlight inform7"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs inform7">给定 matrix =<br><span class="hljs-comment">[</span><br><span class="hljs-comment">  <span class="hljs-comment">[ 5, 1, 9,11]</span>,</span><br><span class="hljs-comment">  <span class="hljs-comment">[ 2, 4, 8,10]</span>,</span><br><span class="hljs-comment">  <span class="hljs-comment">[13, 3, 6, 7]</span>,</span><br><span class="hljs-comment">  <span class="hljs-comment">[15,14,12,16]</span></span><br><span class="hljs-comment">]</span>, <br><br>原地旋转输入矩阵，使其变为:<br><span class="hljs-comment">[</span><br><span class="hljs-comment">  <span class="hljs-comment">[15,13, 2, 5]</span>,</span><br><span class="hljs-comment">  <span class="hljs-comment">[14, 3, 4, 1]</span>,</span><br><span class="hljs-comment">  <span class="hljs-comment">[12, 6, 8, 9]</span>,</span><br><span class="hljs-comment">  <span class="hljs-comment">[16, 7,10,11]</span></span><br><span class="hljs-comment">]</span><br></code></pre></div></td></tr></table></figure>

<h4 id="具体代码："><a href="#具体代码：" class="headerlink" title="具体代码："></a>具体代码：</h4><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">rotate</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[][] matrix)</span> </span>&#123;<br>         <br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure>







<h3 id="零矩阵"><a href="#零矩阵" class="headerlink" title="零矩阵"></a>零矩阵</h3><h3 id="对角线遍历"><a href="#对角线遍历" class="headerlink" title="对角线遍历"></a>对角线遍历</h3>
            </div>
            <hr>
            <div>
              <div class="post-metas mb-3">
                
                
              </div>
              
                <p class="note note-warning">
                  
                    本博客所有文章除特别声明外，均采用 <a target="_blank" href="https://creativecommons.org/licenses/by-sa/4.0/deed.zh" rel="nofollow noopener noopener">CC BY-SA 4.0 协议</a> ，转载请注明出处！
                  
                </p>
              
              
                <div class="post-prevnext">
                  <article class="post-prev col-6">
                    
                    
                      <a href="/%E5%AD%A6%E4%B9%A0git%E5%88%86%E6%94%AF%E6%93%8D%E4%BD%9C-learngitbranching">
                        <i class="iconfont icon-arrowleft"></i>
                        <span class="hidden-mobile">学习git分支操作-learngitbranching</span>
                        <span class="visible-mobile">上一篇</span>
                      </a>
                    
                  </article>
                  <article class="post-next col-6">
                    
                    
                      <a href="/leetcode-%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0">
                        <span class="hidden-mobile">leetcode--算法学习</span>
                        <span class="visible-mobile">下一篇</span>
                        <i class="iconfont icon-arrowright"></i>
                      </a>
                    
                  </article>
                </div>
              
            </div>

            
          </article>
        </div>
      </div>
    </div>
    
      <div class="d-none d-lg-block col-lg-2 toc-container" id="toc-ctn">
        <div id="toc">
  <p class="toc-header"><i class="iconfont icon-list"></i>&nbsp;目录</p>
  <div class="toc-body" id="toc-body"></div>
</div>

      </div>
    
  </div>
</div>

<!-- Custom -->


    

    
      <a id="scroll-top-button" href="#" role="button">
        <i class="iconfont icon-arrowup" aria-hidden="true"></i>
      </a>
    

    
      <div class="modal fade" id="modalSearch" tabindex="-1" role="dialog" aria-labelledby="ModalLabel"
     aria-hidden="true">
  <div class="modal-dialog modal-dialog-scrollable modal-lg" role="document">
    <div class="modal-content">
      <div class="modal-header text-center">
        <h4 class="modal-title w-100 font-weight-bold">搜索</h4>
        <button type="button" id="local-search-close" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body mx-3">
        <div class="md-form mb-5">
          <input type="text" id="local-search-input" class="form-control validate">
          <label data-error="x" data-success="v"
                 for="local-search-input">关键词</label>
        </div>
        <div class="list-group" id="local-search-result"></div>
      </div>
    </div>
  </div>
</div>
    

    
  </main>

  <footer class="text-center mt-5 py-3">
  <div class="footer-content">
     <a href="https://hexo.io" target="_blank" rel="nofollow noopener"><span>Hexo</span></a> <i class="iconfont icon-love"></i> <a href="https://github.com/fluid-dev/hexo-theme-fluid" target="_blank" rel="nofollow noopener"><span>Fluid</span></a> 
  </div>
  

  

  
</footer>


  <!-- SCRIPTS -->
  
  <script  src="https://cdn.jsdelivr.net/npm/nprogress@0.2.0/nprogress.min.js" ></script>
  <link  rel="stylesheet" href="https://cdn.jsdelivr.net/npm/nprogress@0.2.0/nprogress.min.css" />

  <script>
    NProgress.configure({"showSpinner":false,"trickleSpeed":100})
    NProgress.start()
    window.addEventListener('load', function() {
      NProgress.done();
    })
  </script>


<script  src="https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.min.js" ></script>
<script  src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.min.js" ></script>
<script  src="/js/events.js" ></script>
<script  src="/js/plugins.js" ></script>

<!-- Plugins -->


  
    <script  src="/js/img-lazyload.js" ></script>
  



  



  <script  src="https://cdn.jsdelivr.net/npm/tocbot@4.12.0/dist/tocbot.min.js" ></script>



  <script  src="https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@3.5.7/dist/jquery.fancybox.min.js" ></script>



  <script  src="https://cdn.jsdelivr.net/npm/anchor-js@4.3.0/anchor.min.js" ></script>



  <script defer src="https://cdn.jsdelivr.net/npm/clipboard@2.0.6/dist/clipboard.min.js" ></script>






  <script  src="https://cdn.jsdelivr.net/npm/typed.js@2.0.11/lib/typed.min.js" ></script>
  <script>
    (function (window, document) {
      var typing = Fluid.plugins.typing;
      var title = document.getElementById('subtitle').title;
      
      typing(title)
      
    })(window, document);
  </script>



  <script  src="/js/local-search.js" ></script>
  <script>
    (function () {
      var path = "/local-search.xml";
      $('#local-search-input').on('click', function() {
        searchFunc(path, 'local-search-input', 'local-search-result');
      });
      $('#modalSearch').on('shown.bs.modal', function() {
        $('#local-search-input').focus();
      });
    })()
  </script>














  
<script src="/js/diy/caidai.js"></script>



<!-- 主题的启动项 保持在最底部 -->
<script  src="/js/boot.js" ></script>


</body>
</html>
